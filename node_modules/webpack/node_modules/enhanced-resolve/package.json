{
  "name": "enhanced-resolve",
  "version": "0.2.9",
  "author": {
    "name": "Tobias Koppers @sokra"
  },
  "description": "Offers a async require.resolve function. It's highly configurable.",
  "dependencies": {},
  "licenses": [
    {
      "type": "MIT",
      "url": "http://www.opensource.org/licenses/mit-license.php"
    }
  ],
  "devDependencies": {
    "mocha": "*",
    "should": "*"
  },
  "engines": {
    "node": ">=0.6"
  },
  "main": "lib/resolve.js",
  "homepage": "http://github.com/webpack/enhanced-resolve",
  "scripts": {
    "test": "node node_modules/mocha/bin/_mocha --reporter spec"
  },
  "license": "MIT",
  "readme": "# enhanced-resolve\r\n\r\nOffers a async require.resolve function. It's highly configurable.\r\n\r\n[![Build Status](https://secure.travis-ci.org/webpack/enhanced-resolve.png?branch=master)](http://travis-ci.org/webpack/enhanced-resolve)\r\n\r\nMore documentation coming soon...\r\n\r\n``` javascript\r\nvar resolve = require(\"enhanced-resolve\");\r\n\r\nresolve(string context, string identifier, object options, function callback(err, result))\r\nresolve.sync(string context, string identifier, object options)\r\nresolve.context(string context, string identifier, object options, function callback(err, result))\r\nresolve.context.sync(string context, string identifier, object options)\r\n```\r\n\r\n*It is used in [webpack](/webpack/webpack)*",
  "_id": "enhanced-resolve@0.2.9",
  "_from": "enhanced-resolve@0.2.x"
}
